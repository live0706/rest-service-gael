# On définit les étapes (stages) de notre pipeline
stages:
  - build
  - test

# Étape 5 : Configurer la compilation
# Ce job va compiler le code à chaque 'push'
build_job:
  stage: build
  # On utilise l'image recommandée par le TP
  image: maven:3.9.5-amazoncorretto-17
  script:
    # On compile et on crée le .jar, mais on saute les tests
    # C'est plus propre de séparer la compilation et les tests
    - "mvn clean package -DskipTests"
  # On garde les fichiers compilés (dans le dossier 'target')
  # pour que le job de test puisse les utiliser
  artifacts:
    paths:
      - target/
    expire_in: 1 hour # On garde les fichiers 1 heure

# Étape 6 : Configurer les tests (uniquement sur les branches non-main)
test_job:
  stage: test
  # On utilise la même image
  image: maven:3.9.5-amazoncorretto-17
  script:
    # On lance la commande de test donnée dans le TP
    - "mvn clean test"
  rules:
    # Ne PAS exécuter ce job si on est sur la branche 'main'
    - if: $CI_COMMIT_BRANCH == "main"
      when: never
    # Exécuter ce job dans tous les autres cas (branches, merge requests...)
    - when: on_success